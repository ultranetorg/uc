<?xml version="1.0" encoding="UTF-8" ?>
<controls:CustomPage
    x:Class="UC.Umc.Pages.CreateAccountPage"
    xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
    xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
    xmlns:controls="clr-namespace:UC.Umc.Controls"
    xmlns:toolkit="http://schemas.microsoft.com/dotnet/2022/maui/toolkit"
    xmlns:views="clr-namespace:UC.Umc.Views"
    xmlns:vm="clr-namespace:UC.Umc.ViewModels"
    x:DataType="vm:CreateAccountPageViewModel"
    Title="Create Account"
    x:Name="page">
    
    <controls:CustomPage.MainContent>
        <Grid
            Padding="{StaticResource PagePadding}"
            RowDefinitions="*,Auto,Auto"
            RowSpacing="32">
            <CarouselView
                Grid.Row="0"
                HorizontalScrollBarVisibility="Never"
                IndicatorView="indicator"
                IsSwipeEnabled="False"
                Loop="False"
                PeekAreaInsets="0"
                Position="{Binding Position}">
                <CarouselView.ItemTemplate>
                    <DataTemplate>
                        <ContentView Content="{Binding .}" />
                    </DataTemplate>
                </CarouselView.ItemTemplate>
                <CarouselView.ItemsSource>
                    <x:Array Type="{x:Type View}">
						
						<!--Step #1-->
                        <StackLayout Padding="4" Spacing="32">
                            <StackLayout>
                                <Label FontSize="18" Text="Choose account password" />
                                <Label
                                    FontSize="13"
                                    Style="{StaticResource Regular}"
                                    Text="Use strong password for account" />
                            </StackLayout>
                            <controls:FormEntryControl
								IsPassword="True"
                                MaxLength="16"
								Value="{Binding Source={RelativeSource AncestorType={x:Type vm:CreateAccountPageViewModel}}, Path=Password}"
								TextChanged="{Binding Source={RelativeSource AncestorType={x:Type vm:CreateAccountPageViewModel}}, Path=TextChangedCommand}">
                                <controls:FormEntryControl.Behaviors>
                                    <toolkit:MultiValidationBehavior>
                                        <toolkit:TextValidationBehavior MinimumLength="8" />
                                        <toolkit:CharactersValidationBehavior CharacterType="Digit" MinimumCharacterTypeCount="1" />
                                        <toolkit:CharactersValidationBehavior CharacterType="LowercaseLetter" MinimumCharacterTypeCount="1" />
                                        <toolkit:CharactersValidationBehavior CharacterType="UppercaseLetter" MinimumCharacterTypeCount="1" />
                                        <toolkit:CharactersValidationBehavior CharacterType="NonAlphanumericSymbol" MinimumCharacterTypeCount="1" />
                                        <toolkit:CharactersValidationBehavior CharacterType="Whitespace" MaximumCharacterTypeCount="0" />
                                    </toolkit:MultiValidationBehavior>
                                </controls:FormEntryControl.Behaviors>
                            </controls:FormEntryControl>
                            <Button
                                Margin="0,-8,0,0"
                                Style="{StaticResource RandomizeButton}"
                                Command="{Binding Source={RelativeSource AncestorType={x:Type vm:CreateAccountPageViewModel}}, Path=RandomizeCommand}" />
                            <Label
                                FontSize="13"
                                Style="{StaticResource Regular}"
                                Text="Characteristics of strong passwords" />
                            <StackLayout>
                                <controls:ImageTextColumn
									Text="At least 8 characters - the more characters the better"
									IsEnabledImage="{Binding Source={RelativeSource AncestorType={x:Type vm:CreateAccountPageViewModel}}, Path=CharCountDone}"/>
                                <controls:ImageTextColumn
									Text="A mixture of both uppercase and lowercase"
									IsEnabledImage="{Binding Source={RelativeSource AncestorType={x:Type vm:CreateAccountPageViewModel}}, Path=BothCasesDone}"/>
                                <controls:ImageTextColumn
									Text="A mixture of letters and numbers"
									IsEnabledImage="{Binding Source={RelativeSource AncestorType={x:Type vm:CreateAccountPageViewModel}}, Path=NumbersIncluded}"/>
                                <controls:ImageTextColumn
									Text="Inclusion of at least one special character e.g !@#"
									IsEnabledImage="{Binding Source={RelativeSource AncestorType={x:Type vm:CreateAccountPageViewModel}}, Path=SpecialCharacterIncluded}"/>
                            </StackLayout>
                        </StackLayout>

						<!--Step #2-->
                        <views:CreateAccount2View />
                    </x:Array>
                </CarouselView.ItemsSource>
            </CarouselView>
            <IndicatorView x:Name="indicator" Grid.Row="1" />
            <Button 
                Grid.Row="2"
                Command="{Binding NextWorkaroundCommand}"
                Style="{StaticResource NextButton}" />
        </Grid>
    </controls:CustomPage.MainContent>
</controls:CustomPage>
