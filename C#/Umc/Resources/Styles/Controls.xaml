<?xml version="1.0" encoding="utf-8" ?>
<ResourceDictionary 
    x:Class="UC.Umc.Resources.Styles.Controls"
    xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
    xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
    xmlns:toolkit="http://schemas.microsoft.com/dotnet/2022/maui/toolkit"
    xmlns:converters="clr-namespace:UC.Umc.Converters"
    xmlns:controls="clr-namespace:UC.Umc.Controls"
    xmlns:fi="clr-namespace:UC.Umc.Models"
    xmlns:local="clr-namespace:UC.Umc.Resources.Styles">
    
    <ResourceDictionary.MergedDictionaries>
        <local:Colors />
    </ResourceDictionary.MergedDictionaries>
    
    <!--#region Buttons -->
    <Style ApplyToDerivedTypes="True" TargetType="Button">
        <Setter Property="BackgroundColor" Value="{AppThemeBinding Dark={StaticResource PrimaryDarkLighten}, Light={StaticResource PrimaryForLight}}" />
        <Setter Property="TextColor" Value="{AppThemeBinding Dark={StaticResource Primary}, Light={StaticResource PrimaryLight}}" />
        <Setter Property="CornerRadius" Value="10" />
        <Setter Property="HeightRequest" Value="48" />
        <Setter Property="FontSize" Value="13" />
        <Setter Property="FontFamily" Value="SemiBold" />
        <Setter Property="Visual" Value="Default" />
        <Setter Property="TextTransform" Value="None" />
    </Style>

    <Style x:Key="LabelButton" TargetType="Button">
        <Setter Property="BackgroundColor" Value="Transparent" />
        <Setter Property="Margin" Value="4" />
        <Setter Property="TextColor" Value="{StaticResource PrimaryForLight}" />
    </Style>

    <Style x:Key="LabelButton2" TargetType="Button">
        <Setter Property="BackgroundColor" Value="Transparent" />
        <Setter Property="TextColor" Value="{AppThemeBinding Dark={StaticResource PrimaryLight}, Light={StaticResource PrimaryForLight}}" />
    </Style>
    <Style x:Key="DeleteButton" TargetType="Button">
        <Setter Property="BackgroundColor" Value="{AppThemeBinding Dark={StaticResource DeleteBackGround}, Light={StaticResource DeleteRed}}" />
        <Setter Property="TextColor" Value="{AppThemeBinding Dark={StaticResource DeleteRed}, Light={StaticResource PrimaryLight}}" />
    </Style>
    <Style x:Key="RandomizeButton" TargetType="Button">
        <Setter Property="BackgroundColor" Value="{AppThemeBinding Dark={StaticResource PrimaryDarker}, Light={StaticResource PrimaryForLight}}" />
        <Setter Property="ImageSource" Value="{AppThemeBinding Dark={FontImage Size=20, Color=#CCF1FF, FontFamily=icomoon, Glyph={x:Static fi:IconFont.Shuffle}}, Light={FontImage Size=20, Color=#ffffff, FontFamily=icomoon, Glyph={x:Static fi:IconFont.Shuffle}}}" />
        <Setter Property="TextColor" Value="{AppThemeBinding Dark=#CCF1FF, Light=#ffffff}" />
        <Setter Property="ContentLayout" Value="Right" />
        <Setter Property="Text" Value="Randomize password" />
    </Style>
    <Style x:Key="NextButton" TargetType="Button">
        <Setter Property="ImageSource" Value="{AppThemeBinding Dark={FontImage Size=20, Color={StaticResource Primary}, FontFamily=icomoon, Glyph={x:Static fi:IconFont.Next}}, Light={FontImage Size=20, Color={StaticResource PrimaryLight}, FontFamily=icomoon, Glyph={x:Static fi:IconFont.Next}}}" />
        <Setter Property="ContentLayout" Value="Right,24" />
        <Setter Property="Text" Value="Next" />
    </Style>
    <Style x:Key="ConfirmButton" TargetType="Button">
        <Setter Property="ImageSource" Value="{AppThemeBinding Dark={FontImage Size=20, Color={StaticResource Primary}, FontFamily=icomoon, Glyph={x:Static fi:IconFont.Done}}, Light={FontImage Size=20, Color={StaticResource PrimaryLight}, FontFamily=icomoon, Glyph={x:Static fi:IconFont.Done}}}" />
        <Setter Property="ContentLayout" Value="Right" />
        <Setter Property="Text" Value="Confirm" />
    </Style>
    <Style x:Key="PrevButton" TargetType="Button">
        <Setter Property="ImageSource" Value="{AppThemeBinding Dark={FontImage Size=20, Color={StaticResource Primary}, FontFamily=icomoon, Glyph={x:Static fi:IconFont.Prev}}, Light={FontImage Size=20, Color={StaticResource PrimaryLight}, FontFamily=icomoon, Glyph={x:Static fi:IconFont.Prev}}}" />
        <Setter Property="ContentLayout" Value="Left" />
        <Setter Property="Text" Value="Prev" />
    </Style>
    <Style x:Key="CopyHashButton" TargetType="Button">
        <Setter Property="ImageSource" Value="{AppThemeBinding Dark={FontImage Size=20, Color={StaticResource Primary}, FontFamily=icomoon, Glyph={x:Static fi:IconFont.Copy}}, Light={FontImage Size=20, Color={StaticResource PrimaryLight}, FontFamily=icomoon, Glyph={x:Static fi:IconFont.Copy}}}" />
        <Setter Property="ContentLayout" Value="Right" />
        <Setter Property="Text" Value="Next" />
    </Style>
    <Style x:Key="Outline" TargetType="Button">
        <Setter Property="BackgroundColor" Value="Transparent" />
        <Setter Property="TextColor" Value="{StaticResource PrimaryForLight}" />
        <Setter Property="BorderColor" Value="{StaticResource PrimaryForLight}" />
    </Style>
    <!--#endregion Buttons -->

    <!--#region Radio, Check Buttons -->
    <Style ApplyToDerivedTypes="True" TargetType="RadioButton">
        <Setter Property="BackgroundColor" Value="Transparent" />
        <Setter Property="BorderColor" Value="{StaticResource Primary}" />
    </Style>
    <Style ApplyToDerivedTypes="True" TargetType="CheckBox">
        <Setter Property="BackgroundColor" Value="Transparent" />
        <Setter Property="Color" Value="{StaticResource Primary}" />
    </Style>
    <!--#endregion Radio, Check Buttons -->

    <!--#region Image Buttons -->
    <Style ApplyToDerivedTypes="True" TargetType="ImageButton">
        <Setter Property="BackgroundColor" Value="Transparent" />
        <Setter Property="HeightRequest" Value="33" />
        <Setter Property="WidthRequest" Value="33" />
        <Setter Property="Padding" Value="5" />
        <Setter Property="CornerRadius" Value="8" />
        <Setter Property="toolkit:IconTintColorBehavior.TintColor" Value="{AppThemeBinding Dark={StaticResource PrimaryLight}, Light={StaticResource PrimaryDark}}" />
    </Style>
    <Style x:Key="DashBoard" TargetType="ImageButton">
        <Setter Property="BackgroundColor" Value="{AppThemeBinding Dark={StaticResource PrimaryDarkLighten}, Light={StaticResource PrimaryForLight}}" />
        <Setter Property="HeightRequest" Value="80" />
        <Setter Property="WidthRequest" Value="80" />
        <Setter Property="Padding" Value="12" />
        <Setter Property="CornerRadius" Value="8" />
    </Style>
    <Style x:Key="LogOut" TargetType="ImageButton">
        <Setter Property="Source" Value="{FontImage Size=35, FontFamily=icomoon, Glyph={x:Static fi:IconFont.Logout}}" />
        <Setter Property="toolkit:IconTintColorBehavior.TintColor" Value="{AppThemeBinding Dark={StaticResource Primary}, Light={StaticResource PrimaryForLight}}" />

    </Style>
    <Style x:Key="Fingerprint" TargetType="ImageButton">
        <Setter Property="Source" Value="{FontImage Size=35, FontFamily=icomoon, Glyph={x:Static fi:IconFont.Fingerprint}}" />
        <Setter Property="toolkit:IconTintColorBehavior.TintColor" Value="{AppThemeBinding Dark={StaticResource Primary}, Light={StaticResource PrimaryForLight}}" />

    </Style>
    <Style x:Key="Backspace" TargetType="ImageButton">
        <Setter Property="Source" Value="{FontImage Size=35, FontFamily=icomoon, Glyph={x:Static fi:IconFont.Backspace}}" />
        <Setter Property="toolkit:IconTintColorBehavior.TintColor" Value="{AppThemeBinding Dark={StaticResource Primary}, Light={StaticResource PrimaryForLight}}" />

    </Style>
    <Style x:Key="ArrowLeft" TargetType="ImageButton">
        <Setter Property="Source" Value="{FontImage Size=35, FontFamily=icomoon, Glyph={x:Static fi:IconFont.ArrowLeft}}" />
    </Style>
    <Style x:Key="SearchSettings" TargetType="ImageButton">
        <Setter Property="Source" Value="{FontImage Size=35, FontFamily=icomoon, Glyph={x:Static fi:IconFont.Search}}" />
    </Style>
    <Style x:Key="Prev" TargetType="ImageButton">
        <Setter Property="Source" Value="{FontImage Size=35, FontFamily=icomoon, Glyph={x:Static fi:IconFont.Prev}}" />
        <Setter Property="HeightRequest" Value="28" />
    </Style>
    <Style x:Key="Next" TargetType="ImageButton">
        <Setter Property="Source" Value="{FontImage Size=35, FontFamily=icomoon, Glyph={x:Static fi:IconFont.Next}}" />
    </Style>
    <Style x:Key="Watch" TargetType="ImageButton">
        <Setter Property="Source" Value="{FontImage Size=35, FontFamily=icomoon, Glyph={x:Static fi:IconFont.Watch}}" />
    </Style>
    <Style x:Key="Done" TargetType="ImageButton">
        <Setter Property="Source" Value="{FontImage Size=35, FontFamily=icomoon, Glyph={x:Static fi:IconFont.Done}}" />
    </Style>
    <Style x:Key="Read" TargetType="ImageButton">
        <Setter Property="Source" Value="{FontImage Size=35, FontFamily=icomoon, Glyph={x:Static fi:IconFont.Read}}" />
        <Setter Property="toolkit:IconTintColorBehavior.TintColor" Value="{StaticResource Primary}" />
    </Style>
    <Style x:Key="Check" TargetType="ImageButton">
        <Setter Property="Source" Value="{FontImage Size=35, FontFamily=icomoon, Glyph={x:Static fi:IconFont.Done}}" />
        <!--<Setter Property="toolkit:IconTintColorBehavior.TintColor" Value="{StaticResource Primary}" />
        <Style.Triggers>
            <Trigger TargetType="ImageButton" Property="IsEnabled" Value="True">
                <Setter Property="toolkit:IconTintColorBehavior.TintColor" Value="{StaticResource Primary}" />
            </Trigger>
            <Trigger TargetType="ImageButton" Property="IsEnabled" Value="False">
                <Setter Property="toolkit:IconTintColorBehavior.TintColor" Value="{AppThemeBinding Dark={StaticResource PrimaryDarkLighten}, Light={StaticResource UnSelectedColorLight}}" />
            </Trigger>
        </Style.Triggers>-->
    </Style>
    <Style x:Key="Cancel" TargetType="ImageButton">
        <Setter Property="Source" Value="{FontImage Size=35, FontFamily=icomoon, Glyph={x:Static fi:IconFont.Close}}" />
        <Setter Property="BackgroundColor" Value="{AppThemeBinding Dark={StaticResource DarkBackground}, Light={StaticResource LightBackground}}" />
        <Setter Property="Shadow" Value="LightGray" />
    </Style>
    <Style x:Key="Close" TargetType="ImageButton">
        <Setter Property="Source" Value="{FontImage Size=35, FontFamily=icomoon, Glyph={x:Static fi:IconFont.Close}}" />
        <Setter Property="BackgroundColor" Value="Transparent" />
    </Style>
    <Style x:Key="Clear" TargetType="ImageButton">
        <Setter Property="Source" Value="{FontImage Size=35, FontFamily=icomoon, Glyph={x:Static fi:IconFont.Close}}" />
        <Setter Property="BackgroundColor" Value="Transparent" />
        <Setter Property="toolkit:IconTintColorBehavior.TintColor" Value="{StaticResource Red}" />
    </Style>
    <Style x:Key="Shuffle" TargetType="ImageButton">
        <Setter Property="Source" Value="{FontImage Size=35, FontFamily=icomoon, Glyph={x:Static fi:IconFont.Shuffle}}" />
        <Setter Property="BackgroundColor" Value="{AppThemeBinding Dark={StaticResource PrimaryDarker}, Light={StaticResource PrimaryForLight}}" />
        <Setter Property="toolkit:IconTintColorBehavior.TintColor" Value="{AppThemeBinding Dark=#425864, Light={StaticResource PrimaryLight}}" />
    </Style>
    <Style
        x:Key="Accounts"
        BasedOn="{StaticResource DashBoard}"
        TargetType="ImageButton">
        <Setter Property="Source" Value="{FontImage Size=45, FontFamily=icomoon, Glyph={x:Static fi:IconFont.Accounts}}" />
    </Style>
    <Style
        x:Key="Authors"
        BasedOn="{StaticResource DashBoard}"
        TargetType="ImageButton">
        <Setter Property="Source" Value="{FontImage Size=45, FontFamily=icomoon, Glyph={x:Static fi:IconFont.Authors}}" />
    </Style>
    <Style
        x:Key="Auctions"
        BasedOn="{StaticResource DashBoard}"
        TargetType="ImageButton">
        <Setter Property="Source" Value="{FontImage Size=45, FontFamily=icomoon, Glyph={x:Static fi:IconFont.Auctions}}" />
    </Style>
    <Style
        x:Key="Products"
        BasedOn="{StaticResource DashBoard}"
        TargetType="ImageButton">
        <Setter Property="Source" Value="{FontImage Size=45, FontFamily=icomoon, Glyph={x:Static fi:IconFont.Products}}" />
    </Style>
    <Style
        x:Key="Transactions"
        BasedOn="{StaticResource DashBoard}"
        TargetType="ImageButton">
        <Setter Property="Source" Value="{FontImage Size=45, FontFamily=icomoon, Glyph={x:Static fi:IconFont.Transactions}}" />
    </Style>
    <Style
        x:Key="Search"
        BasedOn="{StaticResource DashBoard}"
        TargetType="ImageButton">
        <Setter Property="Source" Value="{FontImage Size=45, FontFamily=icomoon, Glyph={x:Static fi:IconFont.Search}}" />
    </Style>
    <Style
        x:Key="Network"
        BasedOn="{StaticResource DashBoard}"
        TargetType="ImageButton">
        <Setter Property="Source" Value="{FontImage Size=45, FontFamily=icomoon, Glyph={x:Static fi:IconFont.Network}}" />
    </Style>
    <Style
        x:Key="Transfer"
        BasedOn="{StaticResource DashBoard}"
        TargetType="ImageButton">
        <Setter Property="Source" Value="{FontImage Size=45, FontFamily=icomoon, Glyph={x:Static fi:IconFont.Transfer}}" />
    </Style>
    <Style
        x:Key="Help"
        BasedOn="{StaticResource DashBoard}"
        TargetType="ImageButton">
        <Setter Property="Source" Value="{FontImage Size=45, FontFamily=icomoon, Glyph={x:Static fi:IconFont.Help}}" />
    </Style>
    <Style x:Key="Sort" TargetType="ImageButton">
        <Setter Property="Source" Value="{FontImage Size=35, FontFamily=icomoon, Glyph={x:Static fi:IconFont.Name32}}" />
        <Setter Property="BackgroundColor" Value="Transparent" />
    </Style>
    <Style x:Key="Delete" TargetType="ImageButton">
        <Setter Property="Source" Value="{FontImage Size=35, FontFamily=icomoon, Glyph={x:Static fi:IconFont.Trash}}" />
        <Setter Property="toolkit:IconTintColorBehavior.TintColor" Value="{StaticResource Red}" />
    </Style>
    <Style x:Key="Random" TargetType="ImageButton">
        <Setter Property="Source" Value="random.png" />
        <Setter Property="toolkit:IconTintColorBehavior.TintColor" Value="{AppThemeBinding Dark={StaticResource PrimaryDark}, Light={StaticResource LightGray}}" />
        <Setter Property="Padding" Value="0" />
    </Style>
    <Style x:Key="Bell1" TargetType="ImageButton">
        <Setter Property="Source" Value="{FontImage Size=35, FontFamily=icomoon, Glyph={x:Static fi:IconFont.Bell1}}" />
    </Style>
    <Style x:Key="Bell2" TargetType="ImageButton">
        <Setter Property="Source" Value="{FontImage Size=35, FontFamily=icomoon, Glyph={x:Static fi:IconFont.Bell2}}" />
    </Style>
    <Style x:Key="Dots" TargetType="ImageButton">
        <Setter Property="Source" Value="{FontImage Size=35, FontFamily=icomoon, Glyph={x:Static fi:IconFont.Dots}}" />
    </Style>
    
    <Style
        x:Key="Hide"
        BasedOn="{StaticResource DashBoard}"
        TargetType="ImageButton">
        <Setter Property="Source" Value="{FontImage Size=35, FontFamily=icomoon, Glyph={x:Static fi:IconFont.Hide}}" />
    </Style>
    <Style
        x:Key="TransferProduct"
        BasedOn="{StaticResource DashBoard}"
        TargetType="ImageButton">
        <Setter Property="Source" Value="{FontImage Size=35, FontFamily=icomoon, Glyph={x:Static fi:IconFont.TransferProduct}}" />
    </Style>
    <Style
        x:Key="TransferAuthor"
        BasedOn="{StaticResource DashBoard}"
        TargetType="ImageButton">
        <Setter Property="Source" Value="{FontImage Size=35, FontFamily=icomoon, Glyph={x:Static fi:IconFont.TransferAuthor}}" />
    </Style>
    <Style
        x:Key="Bid"
        BasedOn="{StaticResource DashBoard}"
        TargetType="ImageButton">
        <Setter Property="Source" Value="{FontImage Size=35, FontFamily=icomoon, Glyph={x:Static fi:IconFont.Bid}}" />
    </Style>
    <Style x:Key="HintedImageButton" TargetType="ImageButton">
        <Setter Property="toolkit:IconTintColorBehavior.TintColor" Value="{AppThemeBinding Dark={StaticResource Primary}, Light={StaticResource PrimaryLight}}" />
    </Style>
    <Style x:Key="HintedImageButtonInverted" TargetType="ImageButton">
        <Setter Property="toolkit:IconTintColorBehavior.TintColor" Value="{AppThemeBinding Dark={StaticResource PrimaryLight}, Light={StaticResource PrimaryDarker}}" />
    </Style>
    <!--#endregion Image Buttons -->

    <!--#region Images -->
    <Style x:Key="SearchIcon" TargetType="Image">
        <Setter Property="Source" Value="{FontImage Size=35, FontFamily=icomoon, Glyph={x:Static fi:IconFont.Search}}" />
        <Setter Property="toolkit:IconTintColorBehavior.TintColor" Value="{AppThemeBinding Dark=#4E7B89, Light=#A0C1CC}" />
        <Setter Property="HeightRequest" Value="20" />
        <Setter Property="WidthRequest" Value="20" />
    </Style>
    <Style x:Key="RightArrowIcon" TargetType="Image">
        <Setter Property="Source" Value="{FontImage Size=35, FontFamily=icomoon, Glyph={x:Static fi:IconFont.ArrowRight}}" />
        <Setter Property="HeightRequest" Value="32" />
        <Setter Property="WidthRequest" Value="32" />
    </Style>
    <Style x:Key="Rhombus" TargetType="Image">
        <Setter Property="Source" Value="{FontImage Size=35, FontFamily=icomoon, Glyph={x:Static fi:IconFont.Rhombus}}" />
        <Setter Property="toolkit:IconTintColorBehavior.TintColor" Value="{AppThemeBinding Dark={StaticResource Primary}, Light={StaticResource PrimaryDarkLighten}}" />
        <Setter Property="HeightRequest" Value="16" />
        <Setter Property="WidthRequest" Value="16" />
    </Style>
    <Style x:Key="TopArrowIcon" TargetType="Image">
        <Setter Property="Source" Value="{FontImage Size=35, FontFamily=icomoon, Glyph={x:Static fi:IconFont.ArrowTop}}" />
        <Setter Property="toolkit:IconTintColorBehavior.TintColor" Value="{AppThemeBinding Dark=#ffffff, Light={StaticResource PrimaryDark}}" />
        <Setter Property="HeightRequest" Value="22" />
        <Setter Property="WidthRequest" Value="22" />
    </Style>
    <Style x:Key="BottomArrowIcon" TargetType="Image">
        <Setter Property="Source" Value="{FontImage Size=35, FontFamily=icomoon, Glyph={x:Static fi:IconFont.ArrowBottom}}" />
        <Setter Property="toolkit:IconTintColorBehavior.TintColor" Value="{AppThemeBinding Dark=#ffffff, Light={StaticResource PrimaryDark}}" />
        <Setter Property="HeightRequest" Value="22" />
        <Setter Property="WidthRequest" Value="22" />
    </Style>

    <Style x:Key="Logo2" TargetType="Image">
        <Setter Property="Source" Value="{AppThemeBinding Dark='logo2_dark.png', Light='logo2_light.png'}" />
        <Setter Property="HeightRequest" Value="120" />
        <Setter Property="WidthRequest" Value="120" />
    </Style>
    <Style x:Key="Logo" TargetType="Image">
        <Setter Property="Source" Value="{AppThemeBinding Dark='icon_dark.png', Light='icon_light.png'}" />
        <Setter Property="HeightRequest" Value="120" />
        <Setter Property="WidthRequest" Value="120" />
    </Style>
    <Style x:Key="Logo3" TargetType="Image">
        <Setter Property="Source" Value="icon_dark.png" />
        <Setter Property="toolkit:IconTintColorBehavior.TintColor" Value="{AppThemeBinding Dark={StaticResource Primary}, Light={StaticResource PrimaryDark}}" />
        <Setter Property="HeightRequest" Value="120" />
        <Setter Property="WidthRequest" Value="120" />
    </Style>
    <Style x:Key="NoNetwork" TargetType="Image">
        <Setter Property="Source" Value="NoNetwork.png" />
        <Setter Property="HeightRequest" Value="48" />
        <Setter Property="WidthRequest" Value="48" />
    </Style>
    <Style x:Key="AccountsLogo" TargetType="Image">
        <Setter Property="Source" Value="accounts.png" />
        <Setter Property="HeightRequest" Value="48" />
        <Setter Property="WidthRequest" Value="48" />
    </Style>

    <Style x:Key="Globe" TargetType="Image">
        <Setter Property="Source" Value="{FontImage Size=35, FontFamily=icomoon, Glyph={x:Static fi:IconFont.Network}}" />
        <Setter Property="toolkit:IconTintColorBehavior.TintColor" Value="{AppThemeBinding Dark={StaticResource Primary}, Light={StaticResource PrimaryDark}}" />
        <Setter Property="HeightRequest" Value="18" />
        <Setter Property="WidthRequest" Value="18" />
        <Setter Property="Opacity" Value="0.5" />
    </Style>

    <Style x:Key="Star" TargetType="Image">
        <Setter Property="Source" Value="{FontImage Size=35, FontFamily=icomoon, Glyph={x:Static fi:IconFont.Star}}" />
        <Setter Property="toolkit:IconTintColorBehavior.TintColor" Value="{AppThemeBinding Dark={StaticResource Primary}, Light={StaticResource PrimaryDark}}" />
        <Setter Property="HeightRequest" Value="18" />
        <Setter Property="WidthRequest" Value="18" />
        <Setter Property="Opacity" Value="0.5" />

    </Style>
    <Style x:Key="Twitter" TargetType="Image">
        <Setter Property="Source" Value="{FontImage Size=35, FontFamily=icomoon, Glyph={x:Static fi:IconFont.Twitter}}" />
        <Setter Property="toolkit:IconTintColorBehavior.TintColor" Value="{AppThemeBinding Dark={StaticResource Primary}, Light={StaticResource PrimaryDark}}" />
        <Setter Property="HeightRequest" Value="18" />
        <Setter Property="WidthRequest" Value="18" />
        <Setter Property="Opacity" Value="0.5" />

    </Style>
    <Style x:Key="Telegram" TargetType="Image">
        <Setter Property="Source" Value="{FontImage Size=35, FontFamily=icomoon, Glyph={x:Static fi:IconFont.Telegram}}" />
        <Setter Property="toolkit:IconTintColorBehavior.TintColor" Value="{AppThemeBinding Dark={StaticResource Primary}, Light={StaticResource PrimaryDark}}" />
        <Setter Property="HeightRequest" Value="18" />
        <Setter Property="WidthRequest" Value="18" />
        <Setter Property="Opacity" Value="0.5" />
    </Style>
    <Style x:Key="Mail" TargetType="Image">
        <Setter Property="Source" Value="{FontImage Size=35, FontFamily=icomoon, Glyph={x:Static fi:IconFont.Mail}}" />
        <Setter Property="toolkit:IconTintColorBehavior.TintColor" Value="{AppThemeBinding Dark={StaticResource Primary}, Light={StaticResource PrimaryDark}}" />
        <Setter Property="HeightRequest" Value="18" />
        <Setter Property="WidthRequest" Value="18" />
        <Setter Property="Opacity" Value="0.5" />
    </Style>
    <Style x:Key="BottomArrowsIcon" TargetType="Image">
        <Setter Property="Source" Value="{FontImage Size=35, FontFamily=icomoon, Glyph={x:Static fi:IconFont.ArrowsBottom}}" />
        <Setter Property="toolkit:IconTintColorBehavior.TintColor" Value="{AppThemeBinding Dark=#ffffff, Light={StaticResource PrimaryDark}}" />
        <Setter Property="HeightRequest" Value="22" />
        <Setter Property="WidthRequest" Value="22" />
    </Style>
    <!--#endregion Images -->

    <!--#region Labels -->
    <Style x:Key="ListLabel" TargetType="Label">
        <Setter Property="FontFamily" Value="Medium" />
        <Setter Property="FontSize" Value="13" />
        <Setter Property="VisualStateManager.VisualStateGroups">
            <VisualStateGroupList>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Selected">
                        <VisualState.Setters>
                            <Setter Property="TextColor" Value="{AppThemeBinding Dark={StaticResource Primary}, Light=#ffffff}" />
                            <Setter Property="BackgroundColor" Value="{AppThemeBinding Dark={StaticResource PrimaryDarkLighten}, Light={StaticResource PrimaryForLight}}" />
                        </VisualState.Setters>
                    </VisualState>
                    <VisualState x:Name="Normal">
                        <VisualState.Setters>
                            <Setter Property="TextColor" Value="{AppThemeBinding Dark=#ffffff, Light={StaticResource PrimaryDark}}" />
                            <Setter Property="BackgroundColor" Value="Transparent" />
                        </VisualState.Setters>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateGroupList>
        </Setter>
    </Style>
    <Style ApplyToDerivedTypes="True" TargetType="Label">
        <Setter Property="TextColor" Value="{AppThemeBinding Dark={StaticResource PrimaryLight}, Light={StaticResource PrimaryDark}}" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="Opacity" Value="0.9" />
        <Setter Property="FontFamily" Value="SemiBold" />
    </Style>
    <Style
        x:Key="Light"
        ApplyToDerivedTypes="True"
        TargetType="Label">
        <Setter Property="FontSize" Value="11" />
        <Setter Property="FontFamily" Value="Light" />
    </Style>
    <Style
        x:Key="Medium"
        ApplyToDerivedTypes="True"
        TargetType="Label">
        <Setter Property="FontSize" Value="11" />
        <Setter Property="FontFamily" Value="Medium" />
    </Style>
    <Style
        x:Key="Regular"
        ApplyToDerivedTypes="True"
        TargetType="Label">
        <Setter Property="FontSize" Value="11" />
        <Setter Property="FontFamily" Value="Regular" />
    </Style>
    <Style
        x:Key="SubText"
        ApplyToDerivedTypes="True"
        TargetType="Label">
        <Setter Property="FontSize" Value="13" />
        <Setter Property="FontFamily" Value="Regular" />
        <Setter Property="TextColor" Value="{AppThemeBinding Dark={StaticResource SubTextColorDark}, Light={StaticResource SubTextColorLight}}" />
    </Style>
    <Style
        x:Key="Bold"
        ApplyToDerivedTypes="True"
        TargetType="Label">
        <Setter Property="FontSize" Value="11" />
        <Setter Property="FontFamily" Value="Regular" />
    </Style>
    <Style
        x:Key="CodeLabel"
        ApplyToDerivedTypes="True"
        TargetType="Label">
        <Setter Property="TextColor" Value="{AppThemeBinding Dark={StaticResource Secondary}, Light={StaticResource PrimaryLight}}" />
    </Style>
    <Style
        x:Key="NumberLabel"
        ApplyToDerivedTypes="True"
        TargetType="Label">
        <Setter Property="FontSize" Value="36" />
        <Setter Property="TextColor" Value="{AppThemeBinding Dark={StaticResource Primary}, Light={StaticResource PrimaryForLight}}" />
    </Style>
    <Style
        x:Key="UNTLabel"
        ApplyToDerivedTypes="True"
        TargetType="Label">
        <Setter Property="FontSize" Value="14" />
        <Setter Property="FontAttributes" Value="Bold" />
        <Setter Property="TextColor" Value="{AppThemeBinding Dark={StaticResource PrimaryDark}, Light={StaticResource PrimaryDarkLighten}}" />
    </Style>
    <Style
        x:Key="DashLabel"
        ApplyToDerivedTypes="True"
        TargetType="Label">
        <Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource PrimaryDarker},Dark={StaticResource Primary}}" />
        <Setter Property="FontSize" Value="13" />
        <Setter Property="Margin" Value="0,3" />
    </Style>
    <Style
        x:Key="DashLabelValue"
        ApplyToDerivedTypes="True"
        TargetType="Label">
        <Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource PrimaryDarker},Dark={StaticResource White}}" />
        <Setter Property="FontSize" Value="13" />
        <Setter Property="Margin" Value="0,3" />
    </Style>
    <Style
        x:Key="ButtonLabel"
        ApplyToDerivedTypes="True"
        TargetType="Label">
        <Setter Property="TextColor" Value="{AppThemeBinding Dark={StaticResource Primary}, Light={StaticResource PrimaryDarker}, Default={StaticResource PrimaryDarker}}" />
        <Setter Property="FontSize" Value="11" />
        <Setter Property="FontFamily" Value="Medium" />
    </Style>

    <Style x:Key="InvalidLabelStyle" TargetType="Label">
        <Setter Property="TextColor" Value="{StaticResource Error}" />
        <Setter Property="FontSize" Value="12" />
    </Style>
    
    <Style x:Key="TitleLabel" TargetType="Label">
        <Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource PrimaryForLight}, Dark={StaticResource Primary}}" />
        <Setter Property="FontSize" Value="20" />
    </Style>
    <!--#endregion Labels -->
    
    <!--TODO: Change TabView to TabbedPages-->
    <!--<Style TargetType="toolkit:TabViewItem">
        <Setter Property="BadgeBackgroundColor" Value="{AppThemeBinding Dark={StaticResource DarkBackground}, Light={StaticResource LightBackground}}" />
        <Setter Property="BadgeBackgroundColorSelected" Value="{AppThemeBinding Dark={StaticResource PrimaryDarkLighten}, Light={StaticResource PrimaryForLight}}" />
        <Setter Property="ControlTemplate" Value="{StaticResource TabItemTemplate}" />
        <Setter Property="TextColor" Value="{StaticResource PrimaryForLight}" />
        <Setter Property="TextColorSelected" Value="{AppThemeBinding Dark={StaticResource Primary}, Light={StaticResource PrimaryLight}}" />
    </Style>
    <Style x:Key="PrivateKey" TargetType="toolkit:TabViewItem">
        <Setter Property="Icon" Value="{FontImage Size=35, FontFamily=icomoon, Glyph={x:Static fi:IconFont.PrivateKey}}" />
        <Setter Property="Text" Value="From private key" />
    </Style>
    <Style x:Key="FileKey" TargetType="toolkit:TabViewItem">
        <Setter Property="Icon" Value="{FontImage Size=35, FontFamily=icomoon, Glyph={x:Static fi:IconFont.FileKey}}" />
        <Setter Property="Text" Value="From wallet file" />
    </Style>-->

    <Style ApplyToDerivedTypes="True" TargetType="IndicatorView">
        <Setter Property="SelectedIndicatorColor" Value="{AppThemeBinding Dark={StaticResource PrimaryDark}, Light={StaticResource SelectedColorLight}}" />
        <Setter Property="IndicatorColor" Value="{AppThemeBinding Dark={StaticResource UnSelectedColorDark}, Light={StaticResource UnSelectedColorLight}}" />
        <Setter Property="IndicatorsShape" Value="Circle" />
        <Setter Property="IndicatorSize" Value="10" />
    </Style>
    
    <Style ApplyToDerivedTypes="True" TargetType="ListView">
        <Setter Property="SeparatorVisibility" Value="None" />
        <Setter Property="HasUnevenRows" Value="True" />
        <Setter Property="SelectionMode" Value="None" />
        <Setter Property="BackgroundColor" Value="Transparent" />
    </Style>   
    
    <Style ApplyToDerivedTypes="True" TargetType="controls:SwitchView">
        <Setter Property="OffColor" Value="{AppThemeBinding Dark={StaticResource PrimaryDarkLighten}, Light={StaticResource PrimaryForLight}}" />
        <Setter Property="OnColor" Value="{StaticResource Primary}" />
        <Setter Property="CornerRadius" Value="3" />
        <Setter Property="HeightRequest" Value="24" />
    </Style>
    
    <Style x:Key="Valid" TargetType="controls:BorderEntry">
        <Setter Property="BorderColor" Value="{AppThemeBinding Dark={StaticResource PrimaryLight}, Light={StaticResource PrimaryDark}}" />
    </Style>
    <Style x:Key="InvalidEntry" TargetType="controls:BorderEntry">
        <Setter Property="BorderColor" Value="{StaticResource Red}" />
    </Style>
    
    <Style ApplyToDerivedTypes="True" TargetType="Picker">
        <Setter Property="TextColor" Value="{AppThemeBinding Dark={StaticResource PrimaryLight}, Light={StaticResource PrimaryDark}}" />
        <Setter Property="FontSize" Value="13" />
        <Setter Property="HeightRequest" Value="44" />
        <Setter Property="TitleColor" Value="{AppThemeBinding Dark={StaticResource PrimaryLight}, Light={StaticResource PrimaryDark}}" />
        <Setter Property="FontFamily" Value="Medium" />
    </Style>
    
    <Style ApplyToDerivedTypes="True" TargetType="Entry">
        <Setter Property="TextColor" Value="White" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="PlaceholderColor" Value="GhostWhite" />
        <Setter Property="FontFamily" Value="Medium" />
    </Style>
    <Style ApplyToDerivedTypes="True" TargetType="SearchBar">
        <Setter Property="TextColor" Value="White" />
        <Setter Property="PlaceholderColor" Value="GhostWhite" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="FontFamily" Value="Medium" />
    </Style>
    
    <Style
        x:Key="EntryPicker"
        ApplyToDerivedTypes="True"
        TargetType="controls:BorderEntry">
        <Setter Property="TextColor" Value="{AppThemeBinding Dark={StaticResource PrimaryLight}, Light={StaticResource PrimaryDark}}" />
        <Setter Property="FontSize" Value="13" />
        <Setter Property="BorderWidth" Value="1" />
        <Setter Property="BorderRadius" Value="6" />
        <Setter Property="LeftPadding" Value="15" />
        <Setter Property="RightPadding" Value="15" />
        <Setter Property="HeightRequest" Value="44" />
        <Setter Property="ClearButtonVisibility" Value="Never" />
        <Setter Property="FillColor" Value="{AppThemeBinding Dark={StaticResource DarkBackground}, Light={StaticResource LightBackground}}" />
        <Setter Property="FontFamily" Value="Medium" />
        <Setter Property="BorderColor" Value="{AppThemeBinding Dark={StaticResource Primary}, Light={StaticResource PrimaryForLight}}" />
    </Style>
    <Style ApplyToDerivedTypes="True" TargetType="controls:BorderEntry">
        <Setter Property="TextColor" Value="{AppThemeBinding Dark={StaticResource PrimaryLight}, Light={StaticResource PrimaryDark}}" />
        <Setter Property="FontSize" Value="13" />
        <Setter Property="BorderWidth" Value="0.7" />
        <Setter Property="BorderRadius" Value="8" />
        <Setter Property="LeftPadding" Value="15" />
        <Setter Property="RightPadding" Value="15" />
        <Setter Property="HeightRequest" Value="45" />
        <Setter Property="FillColor" Value="{AppThemeBinding Dark={StaticResource DarkBackground}, Light={StaticResource LightBackground}}" />
        <Setter Property="PlaceholderColor" Value="LightGray" />
        <Setter Property="FontFamily" Value="SemiBold" />
        <Setter Property="BorderColor" Value="{AppThemeBinding Dark={StaticResource PrimaryDarkLighten}, Light=#DDEAEE}" />
        <Setter Property="ClearButtonVisibility" Value="WhileEditing" />
    </Style>
    <Style ApplyToDerivedTypes="True" TargetType="controls:BorderEditor">
        <Setter Property="TextColor" Value="{AppThemeBinding Dark={StaticResource PrimaryLight}, Light={StaticResource PrimaryDark}}" />
        <Setter Property="FontSize" Value="13" />
        <Setter Property="BorderWidth" Value="0.7" />
        <Setter Property="BorderRadius" Value="8" />
        <Setter Property="LeftPadding" Value="15" />
        <Setter Property="RightPadding" Value="15" />
        <Setter Property="HeightRequest" Value="45" />
        <Setter Property="FillColor" Value="{AppThemeBinding Dark={StaticResource DarkBackground}, Light={StaticResource LightBackground}}" />
        <Setter Property="PlaceholderColor" Value="LightGray" />
        <Setter Property="FontFamily" Value="SemiBold" />
        <Setter Property="BorderColor" Value="{AppThemeBinding Dark={StaticResource PrimaryDarkLighten}, Light=#DDEAEE}" />
    </Style>
    
    <Style x:Key="ValidBorderStyle" TargetType="Border">
        <Setter Property="Stroke" Value="{AppThemeBinding Light={StaticResource Gray400}, Dark={StaticResource Gray600}}" />
    </Style>
    <Style x:Key="InvalidBorderStyle" TargetType="Border">
        <Setter Property="Stroke" Value="{AppThemeBinding Light={StaticResource Error}, Dark={StaticResource Error}}" />
    </Style>
    <Style x:Key="AccountBorder" TargetType="Border">
        <Setter Property="BackgroundColor" Value="{AppThemeBinding Dark={StaticResource DarkBackground}, Light={StaticResource LightBackground}}" />
    </Style>

    <Style
        x:Key="ValidEditorStyle"
        BaseResourceKey="ValidInputStyle"
        TargetType="Editor" />
    <Style
        x:Key="InvalidEditorStyle"
        BaseResourceKey="InvalidInputStyle"
        TargetType="Editor" />

    <Style
        x:Key="ValidEntryStyle"
        BaseResourceKey="ValidInputStyle"
        TargetType="Entry" />
    <Style
        x:Key="InvalidEntryStyle"
        BaseResourceKey="InvalidInputStyle"
        TargetType="Entry" />
    <Style x:Key="ValidPickerStyle" TargetType="Picker">
        <Setter Property="TitleColor" Value="{AppThemeBinding Light={StaticResource Gray600}, Dark={StaticResource Gray400}}" />
    </Style>
    <Style x:Key="InvalidPickerStyle" TargetType="Picker">
        <Setter Property="TitleColor" Value="{StaticResource Error}" />
    </Style>

    <Style
        x:Key="InvalidInputStyle"
        BaseResourceKey="InvalidTextStyle"
        TargetType="InputView">
        <Setter Property="PlaceholderColor" Value="{StaticResource Error}" />
    </Style>
    <Style
        x:Key="ValidInputStyle"
        BaseResourceKey="ValidTextStyle"
        TargetType="Entry">
        <Setter Property="PlaceholderColor" Value="{AppThemeBinding Light={StaticResource Gray600}, Dark={StaticResource LightGray}}" />
    </Style>

    <Style x:Key="ValidTextStyle" TargetType="Span">
        <Setter Property="FontAttributes" Value="None" />
        <Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource LightThemeText}, Dark={StaticResource DarkThemeText}}" />
        <Setter Property="BackgroundColor" Value="{AppThemeBinding Light={StaticResource LightGray}, Dark={StaticResource Black}}" />
    </Style>
    <Style x:Key="InvalidTextStyle" TargetType="Span">
        <Setter Property="FontAttributes" Value="Bold" />
        <Setter Property="TextColor" Value="{StaticResource Error}" />
        <Setter Property="BackgroundColor" Value="{AppThemeBinding Light={StaticResource LightGray}, Dark={StaticResource Black}}" />
    </Style>

    <Style
        x:Key="ActiveBorderStyle"
        BasedOn="{StaticResource ValidBorderStyle}"
        TargetType="Border" />
    <Style
        x:Key="ActiveEditorStyle"
        BasedOn="{StaticResource ValidEditorStyle}"
        TargetType="Editor" />
    <Style
        x:Key="ActiveEntryStyle"
        BasedOn="{StaticResource ValidEntryStyle}"
        TargetType="Entry" />
    <Style
        x:Key="ActivePickerStyle"
        BasedOn="{StaticResource ValidPickerStyle}"
        TargetType="Picker" />
    <Style
        x:Key="ActiveSpanStyle"
        BasedOn="{StaticResource ValidTextStyle}"
        TargetType="Span" />

    <toolkit:IsStringNotNullOrEmptyConverter x:Key="IsStringNotNullOrEmptyConverter" />
    <converters:IsObjectNotNullOrEmptyConverter x:Key="IsObjectNotNullOrEmptyConverter" />

    <ControlTemplate x:Key="ControlOutline">
        <Grid RowDefinitions="6,4,4,4,20,4,16" RowSpacing="2">
            <Border
                Grid.Row="1"
                Grid.RowSpan="5"
                Margin="0"
                BackgroundColor="Transparent"
                StrokeShape="RoundRectangle 4"
                StrokeThickness="1"
                Style="{DynamicResource ActiveBorderStyle}">
                <ContentPresenter x:Name="ControlOutlineContentPresenter" Margin="12,0" />
            </Border>
            <Label
                Grid.Row="0"
                Grid.RowSpan="4"
                Padding="8,0,8,0"
                FontSize="12"
                IsVisible="{TemplateBinding Value,
                                            Converter={StaticResource IsObjectNotNullOrEmptyConverter}}">
                <Label.FormattedText>
                    <FormattedString>
                        <Span Style="{DynamicResource ActiveSpanStyle}" Text="  " />
                        <Span Style="{DynamicResource ActiveSpanStyle}" Text="{TemplateBinding Placeholder}" />
                        <Span Style="{DynamicResource ActiveSpanStyle}" Text="  " />
                    </FormattedString>
                </Label.FormattedText>
            </Label>
            <Label
                Grid.Row="5"
                Grid.RowSpan="2"
                Padding="16,2,16,0"
                IsVisible="{TemplateBinding ErrorMessage,
                                            Converter={StaticResource IsStringNotNullOrEmptyConverter}}"
                Style="{StaticResource InvalidLabelStyle}"
                Text="{TemplateBinding ErrorMessage}" />
        </Grid>
    </ControlTemplate>

</ResourceDictionary>