<?xml version="1.0" encoding="utf-8" ?>
<toolkit:Popup
    x:Class="UC.Umc.Popups.AuthorOptionsPopup"
    xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
    xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
    xmlns:const="clr-namespace:UC.Umc.Constants"
    xmlns:toolkit="clr-namespace:CommunityToolkit.Maui.Views;assembly=CommunityToolkit.Maui"
    xmlns:views="clr-namespace:UC.Umc.Views"
    xmlns:vm="clr-namespace:UC.Umc.ViewModels.Popups"
    CanBeDismissedByTappingOutsideOfPopup="True"
    Color="Transparent"
    Size="{x:Static const:PopupSizeConstants.Small}"
    VerticalOptions="End"
    x:Name="page"
    x:DataType="vm:AuthorOptionsViewModel">
    <Border Style="{StaticResource AccountCardBorder}">
        <Grid
            ColumnDefinitions="*,*"
            ColumnSpacing="12"
            RowDefinitions="12,Auto"
            RowSpacing="10"
            Padding="24,16"
            BackgroundColor="{AppThemeBinding Dark={StaticResource Secondary}, Light={StaticResource LightBackground}}">
            <Border
                Grid.Row="0"
                Grid.ColumnSpan="2"
                HorizontalOptions="CenterAndExpand"
                Margin="0,0,0,8"
                Style="{StaticResource PopupHandleBorder}" />
            
            <Button
                Grid.Row="1"
                Grid.Column="0"
                IsVisible="{Binding IsMyAuthor}"
                Command="{Binding RenewAuthorCommand}"
                Text="Renew" />
            <Button
                Grid.Row="1"
                Grid.Column="1"
                IsVisible="{Binding IsMyAuthor}"
                Command="{Binding TransferAuthorCommand}"
                Style="{StaticResource DeleteButton}"
                Text="Transfer" />
            <Button
                Grid.Row="1"
                Grid.ColumnSpan="2"
                IsVisible="{Binding CanRegister}"
                Command="{Binding RegisterAuthorCommand}"
                Text="Register" />
            <Button
                Grid.Row="1"
                Grid.Column="0"
                IsVisible="{Binding IsOnAuction}"
                Command="{Binding WatchAuthorCommand}"
                Text="{Binding WatchAuthorText}" />
            <Button
                Grid.Row="1"
                Grid.Column="1"
                Text="Make a bid"
                IsVisible="{Binding IsOnAuction}"
                Command="{Binding MakeBidCommand}" />
        </Grid>
    </Border>
</toolkit:Popup>